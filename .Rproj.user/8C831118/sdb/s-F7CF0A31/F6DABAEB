{
    "collab_server" : "",
    "contents" : "make_assoc_pairs <- function(lemma_list) {\n  \n  cue_target<- read.csv(\"data/association_cue_target.csv\", as.is = T)\n  # filter until words in lemma_list remain\n  lemma_list<- lemma_list %>% filter((uni_lemma %in% cue_target$cue) | (uni_lemma %in% cue_target$target))\n  lemma<- lemma_list$uni_lemma\n  cue_target<- cue_target %>% \n    filter(cue %in% lemma, \n           target %in% lemma, \n           normed==\"YES\") %>% \n    select(cue, target) %>% \n    mutate(link=1)\n  \n  assoc_table<- expand.grid(cue= lemma, target= lemma) %>% \n    left_join(cue_target) %>% \n    mutate(link=if_else(is.na(link),0,link))\n  \n  #make a association network dataframe with item number\n  #rename stuffs so it could conform to the format  needs\n  #item corresponds to target ;  pair corresponds to cue\n  assoc_link <- assoc_table %>%\n    rename(pair.definition = cue) %>%\n    left_join(lemma_list, c(\"pair.definition\" = \"uni_lemma\")) %>%\n    rename(pair = item, item.definition = target) %>%\n    left_join(lemma_list, c(\"item.definition\" = \"uni_lemma\")) %>%\n    select(item, item.definition, pair, pair.definition, link) %>%\n    arrange(item, pair) %>%\n    filter(item!=pair)\n  \n  return(assoc_link)\n}\n",
    "created" : 1524768997608.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3186169340",
    "id" : "F6DABAEB",
    "lastKnownWriteTime" : 1524767650,
    "last_content_update" : 1524767650,
    "path" : "~/Documents/Experiments/conceptNet/helpers/make_assoc_pairs.r",
    "project_path" : "helpers/make_assoc_pairs.r",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}